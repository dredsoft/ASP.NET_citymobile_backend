function linq(){function n(){if(0!==t.length)if(t.length>1)for(var n=0,r=t.length;r>n;n++)e.push(t[n]);else t[0]instanceof Array&&(e=t[0])}var t=arguments,e=[];return n(),{get:function(){return e},map:function(n){for(var t=[],r=0,i=e.length;i>r;r++)t.push(n(e[r],r));return linq(t)},forEach:function(n){for(var t=0,r=e.length;r>t;t++)n(e[t],t)},where:function(n){return linq(e.filter(n))},first:function(n){if(!n){if(0===e.length)throw"No elements in the sequence!";return e[0]}var t=e.filter(n);if(0===t.length)throw"Didn't match any element with the conditions!";return t[0]},firstOrDefault:function(n){return n?e.filter(n)[0]:0===e.length?null:e[0]},last:function(n){if(!n){if(0===e.length)throw"No elements in the sequence!";return e[e.length-1]}var t=e.filter(n);if(0===t.length)throw"Didn't match any element with the conditions!";return t[t.length-1]},lastOrDefault:function(n){if(!n)return 0===e.length?void 0:e[e.length-1];var t=e.filter(n);return t[t.length-1]},groupBy:function(n){var t={};return e.forEach(function(e){var r=JSON.stringify(n(e));t[r]=t[r]||[],t[r].push(e)}),linq(Object.keys(t).map(function(n){return t[n]}))},remove:function(n){return"function"==typeof n?linq(e).where(n).forEach(function(n){e.splice(e.indexOf(n),1)}):e.splice(e.indexOf(n),1),e},clear:function(){e.length=0},any:function(n){return-1!==e.indexOf(n)}}}
//# sourceMappingURL=data:application/json;base64,